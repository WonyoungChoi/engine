name: Build

on:
  push:
    branches:
      - "flutter-*-tizen"
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/flutter-tizen/build-engine:latest
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      matrix:
        arch: [arm, arm64, x86]
        mode: [debug, release, profile]
        include:
          - arch: arm
            os: linux
            triple: armv7l-tizen-linux-gnueabi
          - arch: arm64
            os: linux
            triple: aarch64-tizen-linux-gnu
          - arch: x86
            os: linux
            triple: i586-tizen-linux-gnueabi
          - arch: x64
            os: host
            triple: none
            mode: debug
        exclude:
          - arch: x86
            mode: release
          - arch: x86
            mode: profile

    steps:
      - name: setup variables for host
        if: matrix.os == 'host'
        run: |
          echo "OUTPUT_NAME=host_${{ matrix.mode }}" >> $GITHUB_ENV
          echo "BUILD_TARGET_OPT=--build-target flutter_tizen_unittests" >> $GITHUB_ENV

      - name: setup variables for linux
        if: matrix.os == 'linux'
        run: |
          echo "OUTPUT_NAME=linux_${{ matrix.mode }}_${{ matrix.arch }}" >> $GITHUB_ENV

      - uses: actions/checkout@v2
        with:
          path: src/flutter

      - uses: actions/cache@v2
        with:
          path: src/out/${{ env.OUTPUT_NAME }}
          key: out-build-${{ env.OUTPUT_NAME }}-${{ github.sha }}
          restore-keys: |
            out-build-${{ env.OUTPUT_NAME }}-

      - name: gclient sync
        run: |
          src/flutter/ci/tizen/gclient-prepare-sync.sh --reduce-deps --shallow-sync
          gclient sync -v --no-history --shallow

      - name: build
        run: |
          src/flutter/ci/tizen/cache-checksum.sh restore src/out/$OUTPUT_NAME
          src/flutter/ci/tizen/build-engine.sh \
            --target-os ${{ matrix.os }} \
            --target-arch ${{ matrix.arch }} \
            --target-triple ${{ matrix.triple }} \
            --runtime-mode ${{ matrix.mode }} $BUILD_TARGET_OPT
          src/flutter/ci/tizen/cache-checksum.sh save src/out/$OUTPUT_NAME

      - uses: actions/upload-artifact@v2
        if: matrix.os == 'host'
        with:
          name: host-${{ matrix.arch }}-${{ matrix.mode }}
          path: |
            src/out/${{ env.OUTPUT_NAME }}/*_unittests

      - uses: actions/upload-artifact@v2
        if: matrix.os == 'linux'
        with:
          name: tizen-${{ matrix.arch }}-${{ matrix.mode }}
          path: |
            src/out/${{ env.OUTPUT_NAME }}/libflutter_*.so

      - uses: actions/upload-artifact@v2
        if: matrix.arch == 'arm' && matrix.mode == 'release'
        with:
          name: tizen-common
          path: |
            src/out/linux_release_arm/icu
            src/out/linux_release_arm/public
            src/out/linux_release_arm/cpp_client_wrapper
            !src/out/linux_release_arm/cpp_client_wrapper/engine_method_result.cc

  test:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/flutter-tizen/build-engine:latest
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: host-x64-debug

      - name: prepare
        run: |
          /etc/init.d/dbus start
          chmod +x flutter_tizen_unittests

      - name: run unittests
        run: |
          ./flutter_tizen_unittests
