name: MacOS Test

on:
  push:

jobs:
  build:
    runs-on: macos-11

    strategy:
      matrix:
        arch: [arm, arm64]
        mode: [release, profile]

    steps:
      - uses: actions/checkout@v2
        with:
          path: src/flutter

      - name: Install depot_tools
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "$PWD/depot_tools" >> $GITHUB_PATH

      - name: Print environments
        run: |
          printenv

      - name: GClient Sync
        run: |
          gclient config --name=src/flutter --unmanaged https://github.com/flutter-tizen/engine
          gclient setdep --var=download_android_deps=False --deps-file=src/flutter/DEPS
          gclient sync -v --no-history --shallow
      
      - name: Build
        working-directory: ./src
        run: |
          # Change host_toolchain to mac/clang_x64
          sed -i "" "s|//build/toolchain/linux:clang_$host_cpu|//build/toolchain/mac:clang_$host_cpu|g" build/config/BUILDCONFIG.gn
          # Pass dummy toolchain values to use custom toolchain settings
          python3 ./flutter/tools/gn --linux --linux-cpu=${{ matrix.arch }} --runtime-mode=${{ matrix.mode }} \
            --no-goma --macos-build-tizen \
            --target-toolchain _ --target-sysroot _ --target-triple _
          ninja -C ./out/linux_${{ matrix.mode }}_${{ matrix.arch }} clang_x64/gen_snapshot

      - uses: actions/upload-artifact@v2
        with:
          name: tizen-${{ matrix.arch }}-${{ matrix.mode }}_darwin-x64
          path: |
            src/out/linux_${{ matrix.mode }}_${{ matrix.arch }}/clang_x64/gen_snapshot


